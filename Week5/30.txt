/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool dfs(TreeNode* root,vector<int> arr, int index){
        if(arr[index]!=root->val)return false;
        if(index==arr.size()-1){
            //if leaf return true
            return (root->left == NULL && root->right==NULL);
        }
        return ((root->left!=NULL && dfs(root->left,arr,index+1)) ||  (root->right!=NULL && dfs(root->right,arr,index+1)) );
    }
    bool isValidSequence(TreeNode* root, vector<int>& arr) {
        if(!root) return arr.size()==0;
        return dfs(root,arr,0);
        
    }
};
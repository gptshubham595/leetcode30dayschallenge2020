class Solution {
public:
    int sumR(vector<int>& nums,int x){
        int s=0;
        for(int i=0;i<=x;i++)s+=nums[i];
        return s;
    }
    int subarraySum(vector<int>& nums, int k) {
        ios_base::sync_with_stdio(false);
        int n = nums.size(),v=0,sum=0;
        
        vector<int> dp (n,0);
        
        dp[0]=nums[0];
        
        for (int i = 1; i < n; i++){dp[i]=nums[i]+dp[i-1];}
        
        // for(auto i:dp)cout<<i;
        // cout<<endl;
        
        for (int i = 0; i < n; i++) 
        {    
            if(dp[i]==k) v++;
        
            for (int j = i+1; j < n; j++) {
                sum=dp[j]-dp[i];

                // cout<<sum<<endl;

                if(sum==k)v++;
            }
        }
        
    return v;
    }
};